version: '2'

volumes:
    prometheus_data: {}
    grafana_data: {}

networks:
  front-tier:
    driver: bridge
  back-tier:
    driver: bridge

services:
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - /mnt/dockerConfigs/monitoring/prometheus/:/etc/prometheus/
      - /metrics/prometheus:/prometheus
    command:
      - '-config.file=/etc/prometheus/prometheus.yml'
      - '-storage.local.path=/prometheus'
      - '-alertmanager.url=http://alertmanager:9093'
    expose:
      - 9090
    ports:
      - 9090:9090
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    depends_on:
      - cadvisor
    networks:
      - back-tier
  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc
      - /sys:/host/sys
      - /:/rootfs
    command:
      - '-collector.procfs=/host/proc'
      - '-collector.sysfs=/host/sysfs'
      - '-collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)"'
    expose:
      - 9100
    networks:
      - back-tier
  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093
    volumes:
      - /mnt/dockerConfigs/monitoring/alertmanager/:/etc/alertmanager/
    networks:
      - back-tier
    command:
      - '-config.file=/etc/alertmanager/config.yml'
      - '-storage.path=/alertmanager'
  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    expose:
      - 8080
    networks:
      - back-tier
  elasticsearch:
    restart: always
    image: elasticsearch:2
    environment:
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"
    command: elasticsearch -Des.network.host=0.0.0.0
    volumes:
      - /zfs/elasticsearch/data:/usr/share/elasticsearch/data
      - /zfs/elasticsearch/config:/usr/share/elasticsearch/config
  logstash:
    restart: always
    image: logstash:2
    command: logstash -f /config/logstash.conf
    volumes:
      - ./logstash:/config:ro
    ports:
      - "2055:2055/udp"
      - "514:1514/tcp"
      - "514:1514/udp"
    links:
      - elasticsearch
  kibana:
    restart: always
    image: kibana:4
    ports:
      - "5601:5601"
    links:
      - elasticsearch
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
    env_file:
      - config.monitoring
    networks:
      - back-tier
      - front-tier
